{
  "stats": {
    "suites": 1,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-12T21:05:42.470Z",
    "end": "2022-10-12T21:06:16.830Z",
    "duration": 30223,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8e5dc4d8-6137-4d0d-b639-c1d406b5b3dd",
      "title": "",
      "fullFile": "cypress/integration/BWNS_workflow/BWNS_usercases/bwns.spec.js",
      "file": "cypress/integration/BWNS_workflow/BWNS_usercases/bwns.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ebae34d2-f596-4357-84af-429b52391251",
          "title": "Test file for F__NPPA-30",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Purpose of Notification - Verify the radio button by the user type",
              "fullTitle": "Test file for F__NPPA-30 Purpose of Notification - Verify the radio button by the user type",
              "timedOut": null,
              "duration": 6012,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n  this.text = text;\n  cy.get(\".usa-form > :nth-child(3) > :nth-child(2) > .usa-radio__label\").contains(\"Yes\");\n  cy.get(\":nth-child(3) > :nth-child(3) > .usa-radio__label\").contains(\"No\");\n  cy.get('[type=\"radio\"]#waiver30100bno').check(\"no\", {\n    force: true\n  });\n  cy.get(\"#patient-level > .usa-legend > .margin-bottom-05 > strong\").contains(\"What patient level are you applying for?\");\n  cy.get(\"#patient-level-30 > :nth-child(1) > .usa-radio__label\").contains(\"I am applying for 30-Patient Level\");\n  cy.get(\"#patient-level-30 > :nth-child(2) > .usa-radio__label\").contains(\"I am apply for 30-Patient Level without training requirements\");\n  if (this.text.UserType === 'F_') {\n    cy.get('#level3').should('be.enabled');\n    cy.get('#level4').should('be.enabled');\n  } else {\n    cy.get('#level3').should('be.enabled');\n    cy.get('#level4').should('be.disabled');\n  }\n  if (this.text.Type === 'NPPA-30' || this.text.Type === 'NPPA-30E' || this.text.Type === 'NPPA-100' || this.text.Type === 'CN-30' || this.text.Type === 'CN-30E' || this.text.Type === 'CN-100') {\n    cy.get(\":nth-child(5) > .usa-legend > .margin-bottom-05 > strong\").contains(\"More reasons [optional]\");\n    cy.get(\":nth-child(2) > .usa-checkbox__label\").contains(\"New Notification with the intent to immediately facilitate treatment an individual (one) patient\");\n  } else {\n    cy.get(\":nth-child(3) > .usa-legend > p > strong\").contains(\"I am board certified in addiction medicine or addiction psychiatry by the American Board of Preventive Medicine or the American Board of Psychiatry and Neurology.\");\n    cy.get('[type=\"radio\"]#waiver30100yes').check(\"yes\", {\n      force: true\n    });\n    cy.get(\":nth-child(6) > .usa-legend > .margin-bottom-05 > strong\").contains(\"More reasons [optional]\");\n    cy.get(\".usa-checkbox__label\").contains(\"New Notification with the intent to immediately facilitate treatment an individual (one) patient\");\n  }\n});",
              "err": {},
              "uuid": "7bec28aa-b9de-4d6b-94c7-9b823c000389",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Purpose of Notification - Can verify the user preset values on Purpose of Notification page",
              "fullTitle": "Test file for F__NPPA-30 Purpose of Notification - Can verify the user preset values on Purpose of Notification page",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".margin-top-5\").contains(\"This form is intended to facilitate the implementation of the provisions of 21\");\ncy.get(\".grid-row > .usa-legend > p > strong\").contains(\"I provide medication-assisted treatment with covered medications\");\ncy.get(\".usa-form > :nth-child(3) > :nth-child(2) > .usa-radio__label\").contains(\"Yes\");\ncy.get(\":nth-child(3) > :nth-child(3) > .usa-radio__label\").contains(\"No\"); // cy.get(\":nth-child(3) > .usa-checkbox__label\").contains(\"Second Notification of need and intent to treat up to 100 patients (exisiting 30-limit patient practitioners)\")\n// cy.get('#reason2').should('be.disabled')",
              "err": {},
              "uuid": "e53e9ad4-99e1-46ec-aed4-d21ae298de06",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Purpose of Notification - Can verify the user preset values on Purpose of Notification page Yes option",
              "fullTitle": "Test file for F__NPPA-30 Purpose of Notification - Can verify the user preset values on Purpose of Notification page Yes option",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".usa-form > :nth-child(3) > :nth-child(2) > .usa-radio__label\").contains(\"Yes\");\ncy.get(\":nth-child(3) > :nth-child(3) > .usa-radio__label\").contains(\"No\");\ncy.get('[type=\"radio\"]#waiver30100byes').check(\"yes\", {\n  force: true\n});\ncy.get(\"#patient-level > .usa-legend > .margin-bottom-05 > strong\").contains(\"What patient level are you applying for?\");\ncy.get(\"#patient-level-100 > :nth-child(1) > .usa-radio__label\").contains(\"I am applying for 100-Patient Level\");\ncy.get(\"#patient-level-100 > :nth-child(2) > .usa-radio__label\").contains(\"I am eligible for 100-Patient Level, but applying for 30-Patient Level\");\ncy.get('#level1').should('be.enabled');\ncy.get('#level2').should('be.enabled'); // cy.get(\":nth-child(3) > .usa-checkbox__label\").contains(\"Second Notification of need and intent to treat up to 100 patients (exisiting 30-limit patient practitioners)\")\n//  cy.get('#reason2').should('be.disabled')",
              "err": {},
              "uuid": "c44de3bc-d07b-4ecc-a5e3-dce67605177d",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Purpose of Notification - Can fill up the Purpose of  Notification page with Yes option",
              "fullTitle": "Test file for F__NPPA-30 Purpose of Notification - Can fill up the Purpose of  Notification page with Yes option",
              "timedOut": null,
              "duration": 1480,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n  this.text = text;\n  if (this.text.Type === 'NPPA-30' || this.text.Type === 'CN-30') {\n    cy.get('[type=\"radio\"]#waiver30100bno').check(\"no\", {\n      force: true\n    });\n    cy.get('[type=\"radio\"]#level3').check(\"30\", {\n      force: true\n    });\n  } else if (this.text.Type === 'NPPA-30E' || this.text.Type === 'CN-30E') {\n    cy.get('[type=\"radio\"]#waiver30100byes').check(\"yes\", {\n      force: true\n    });\n    cy.get('[type=\"radio\"]#level2').check(\"30eligible100\", {\n      force: true\n    });\n  } else if (this.text.Type === 'NPPA-100' || this.text.Type === 'CN-100') {\n    cy.get('[type=\"radio\"]#waiver30100byes').check(\"yes\", {\n      force: true\n    });\n    cy.get('[type=\"radio\"]#level1').check(\"100\", {\n      force: true\n    });\n  } else if (this.text.Type === 'MD-30') {\n    cy.get('[type=\"radio\"]#waiver30100bno').check(\"no\", {\n      force: true\n    });\n    cy.get('[type=\"radio\"]#level3').check(\"30\", {\n      force: true\n    });\n  } else if (this.text.Type === 'MD-30E') {\n    cy.get('[type=\"radio\"]#waiver30100byes').check(\"yes\", {\n      force: true\n    });\n    cy.get('[type=\"radio\"]#level2').check(\"30eligible100\", {\n      force: true\n    });\n  } else if (this.text.Type === 'MD-100') {\n    cy.get('[type=\"radio\"]#waiver30100byes').check(\"yes\", {\n      force: true\n    });\n    cy.get('[type=\"radio\"]#level1').check(\"100\", {\n      force: true\n    });\n  } else {\n    cy.skipOn('Chrome');\n  }\n});\ncy.get('[type=\"checkbox\"]#reason1').check(\"immediate\", {\n  force: true\n});\ncy.get('.btn-next').click();\ncy.get('.red-underline').contains(\"Practitioner Information\");",
              "err": {},
              "uuid": "cb3f8586-49bd-4db3-baf6-60d39ef8e9c8",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Practitioner Information- Can check all values",
              "fullTitle": "Test file for F__NPPA-30 Practitioner Information- Can check all values",
              "timedOut": null,
              "duration": 6919,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.usa-form > :nth-child(5)').invoke('text').as('DEA'); //Some other commands\ncy.get('@DEA').then(textDEA => {\n  cy.log(textDEA); //Prints the text\n  cy.writeFile('/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/DEA/DEAnumber.txt', textDEA.slice(25, 34));\n});\ncy.get('[for=\"first-name\"]').contains(\"First name\");\ncy.get('#first-name').invoke('val').should('not.be.empty');\ncy.get('[for=\"middle-name\"]').contains(\"Middle name\");\ncy.get(':nth-child(1) > .usa-label').contains(\"Last name\");\ncy.get('#last-name').invoke('val').should('not.be.empty');\ncy.get('.grid-row > :nth-child(2) > .usa-label').contains(\"Suffix\");\ncy.get('#suffix').invoke('val').should('not.be.empty');\ncy.get('#first-name').invoke('val').as('firstname');\ncy.get('@firstname').then(firstname => {\n  cy.log(firstname); //Prints the text\n  cy.get('#last-name').invoke('val').as('lastname');\n  cy.get('@lastname').then(lastname => {\n    cy.log(lastname); //Prints the text\n    cy.get('#suffix').invoke('val').as('suffix');\n    cy.get('@suffix').then(suffix => {\n      cy.log(suffix); //Prints the text\n      cy.writeFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/userinfo/profile/${Allusers}.json`, {\n        FirstName: firstname,\n        LastName: lastname,\n        Suffix: suffix\n      });\n    });\n  });\n});\ncy.get('[for=\"discipline-options\"]').contains(\"Professional Disciplines\");\ncy.get('select').select(1).should('have.value', 'Addiction Medicine');\ncy.get('select').select(2).should('have.value', 'Addiction Psychiatry');\ncy.get('select').select(3).should('have.value', 'Allergy and Immunology');\ncy.get('select').select(4).should('have.value', 'Anesthesiology');\ncy.get('select').select(5).should('have.value', 'Cardiothoracic Surgery');\ncy.get('select').select(6).should('have.value', 'Colon and Rectal Surgery');\ncy.get('select').select(7).should('have.value', 'Dermatology');\ncy.get('select').select(8).should('have.value', 'Emergency Medicine');\ncy.get('select').select(9).should('have.value', 'Family Medicine');\ncy.get('select').select(10).should('have.value', 'Internal Medicine');\ncy.get('select').select(11).should('have.value', 'Interventional Radiology');\ncy.get('select').select(12).should('have.value', 'Neurological Surgery');\ncy.get('select').select(13).should('have.value', 'Neurology');\ncy.get('select').select(14).should('have.value', 'Nuclear Medicine');\ncy.get('select').select(15).should('have.value', 'Obstetrics & Gynecologic');\ncy.get('select').select(16).should('have.value', 'Occupational Medicine');\ncy.get('select').select(17).should('have.value', 'Ophthalmology');\ncy.get('select').select(18).should('have.value', 'Orthopedic Surgery');\ncy.get('select').select(19).should('have.value', 'Otolaryngology & Facial Plastic Surgery');\ncy.get('select').select(20).should('have.value', 'Pediatrics');\ncy.get('select').select(21).should('have.value', 'Physical Medicine and Rehabilitation');\ncy.get('select').select(22).should('have.value', 'Plastic & Reconstructive Surgery');\ncy.get('select').select(23).should('have.value', 'Preventive Medicine');\ncy.get('select').select(24).should('have.value', 'Psychiatry');\ncy.get('select').select(25).should('have.value', 'Public Health and General Preventive Medicine');\ncy.get('select').select(26).should('have.value', 'Radiation Oncology');\ncy.get('select').select(27).should('have.value', 'Radiology');\ncy.get('select').select(28).should('have.value', 'Surgery (general)');\ncy.get('select').select(29).should('have.value', 'Thoracic and Cardiac Surgery');\ncy.get('select').select(30).should('have.value', 'Urological Surgery');\ncy.get('select').select(31).should('have.value', 'Vascular Surgery');\ncy.get('select').select(32).should('have.value', 'Other');\ncy.get(':nth-child(3) > strong').contains(\"State Health Professional License Number:\");\ncy.get('.usa-form > :nth-child(4)').contains(\"License State:\");\ncy.get('.usa-form > :nth-child(4)').invoke('text').as('text1');\ncy.get('@text1').then(countnumber => {\n  let counter = countnumber;\n  let delimiter = ' '; //character to split on\n  let start = 2; //start after 2nd -\n  let count = counter.split(delimiter).slice(start); //split on each -, return everything after dash #2\n  const Licensestate = count.join(delimiter); //join all of them together; result = NPPA-30 Number:0 [Eddieuattest_30_case-noi-001-nppa@icf.com] (VY9151318/347553)\n  // const state = Licensestate.substring(0, result.indexOf(' ')); //get all characters before the first space; result = NPPA-30\n  cy.log(Licensestate);\n  cy.writeFile('/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/state/state.txt', Licensestate);\n});\ncy.get(':nth-child(5) > strong').contains(\"DEA Registration Number:\");\ncy.get('.btn-next').click();\ncy.get('.red-underline').contains(\"Location Information\");",
              "err": {},
              "uuid": "c087a582-558b-4fae-8cdf-49fe9882df92",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Location Information - Can check all values",
              "fullTitle": "Test file for F__NPPA-30 Location Information - Can check all values",
              "timedOut": null,
              "duration": 2259,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.margin-bottom-05').contains(\"Only one address should be specified. For the practitioner to dispense the narcotic drugs or combinations to be used under this notification,\");\ncy.get('[for=\"primary-address\"]').contains(\"Street 1\");\ncy.get('#primary-address').invoke('val').should('not.be.empty');\ncy.get('[for=\"secondary-address\"]').contains(\"Street 2 [optional]\");\ncy.get('[for=\"city\"]').contains(\"City\");\ncy.get('#city').invoke('val').should('not.be.empty');\ncy.get('[for=\"location-state\"]').contains(\"State\");\ncy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/state/state.txt`).then(text => {\n  const Licensestate = text;\n  cy.get('#location-state').select(Licensestate, {\n    force: true\n  }).should('have.value', Licensestate);\n});\ncy.get('[for=\"zip-code\"]').contains(\"Zip\");\ncy.get('#zip-code').invoke('val').should('not.be.empty');\ncy.get('.form-element > .usa-legend > p').contains(\"Is this location a Federally Qualified Health Center (FQHC) as defined under Section 1861(aa)(4)(B) of the Social Security Act (42 .U.S.C. 1395x)?\");\ncy.get('[type=\"radio\"]#fqhcyes').check(\"yes\", {\n  force: true\n});\ncy.get('#fqhcyes').should('be.checked').and('have.value', 'yes');\ncy.get('[for=\"telephone\"]').contains(\"Telephone Number\");\ncy.get('#telephone').invoke('val').should('not.be.empty');\ncy.get('#telephone').clear().type(\"5555555555\");\ncy.get('[for=\"extension\"]').contains(\"Extension [optional]\");\ncy.get('[for=\"fax\"]').contains(\"Fax Number [optional]\");\ncy.get('#primary-address').invoke('val').as('address1');\ncy.get('@address1').then(address1 => {\n  cy.log(address1); //Prints the text\n  cy.get('#city').invoke('val').as('city');\n  cy.get('@city').then(city => {\n    cy.log(city); //Prints the text\n    cy.get('#zip-code').invoke('val').as('zipcode');\n    cy.get('@zipcode').then(zipcode => {\n      cy.log(zipcode); //Prints the text\n      cy.get('#telephone').invoke('val').as('telephone');\n      cy.get('@telephone').then(telephone => {\n        cy.log(telephone); //Prints the text\n        cy.writeFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/userinfo/address/${Allusers}.json`, {\n          Address: address1,\n          City: city,\n          Zipcode: zipcode,\n          Telephone: telephone\n        });\n      });\n    });\n  });\n});\ncy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n  this.text = text;\n  if (this.text.Type === 'NPPA-100' || this.text.Type === 'CN-100') {\n    cy.get(':nth-child(12) > strong').contains(\"b.crusher@enterprise.com\");\n    cy.get('.usa-form > :nth-child(13)').contains(\"To change your email address, please go to your account settings.\");\n  } else {\n    cy.get(':nth-child(11) > strong').contains(\"b.crusher@enterprise.com\");\n    cy.get('.usa-form > :nth-child(12)').contains(\"To change your email address, please go to your account settings.\");\n  }\n});\ncy.get('.btn-next').click();\ncy.get('.red-underline').contains(\"Certifications\");",
              "err": {},
              "uuid": "1d35e827-a151-40d8-aac9-e969f2bab4da",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Certifications page - Can check all contents and validations ",
              "fullTitle": "Test file for F__NPPA-30 Certifications page - Can check all contents and validations ",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n  this.text = text; /////////////////////////////////\n  //      PA & CN 30 USER             //\n  /////////////////////////////////\n  if (this.text.Type === 'NPPA-30' || this.text.Type === 'CN-30') {\n    cy.task('readXlsx', {\n      file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Certification Questions.xlsx`,\n      sheet: `APRN,PA-30`\n    }).then(sheet => {\n      cy.get(\".red-underline\").contains(\"Certifications\");\n      cy.get(\":nth-child(2) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n      cy.get(\":nth-child(2) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A3'].v);\n      cy.get(\":nth-child(3) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A4'].v);\n      cy.get(\":nth-child(3) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A5'].v);\n      cy.get(\":nth-child(4) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A6'].v);\n      cy.get(\":nth-child(4) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A7'].v);\n      });\n      cy.get(\":nth-child(5) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A8'].v);\n      });\n      if (this.text.Type === 'NPPA-30') {\n        cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A9'].v);\n      }\n      if (this.text.Type === 'CN-30') {\n        cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A10'].v);\n      }\n      cy.get(\":nth-child(6) > :nth-child(1) > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A11'].v);\n      cy.get(\":nth-child(6) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A12'].v);\n      cy.get(\".margin-top-0\").invoke('text').as('text1').should('contain', sheet['A13'].v);\n      cy.get(\":nth-child(6) > .usa-alert > .usa-alert__body > .usa-alert__text\").invoke('text').as('text1').should('contain', sheet['A14'].v);\n      cy.get(\":nth-child(5) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A15'].v);\n      cy.get(\":nth-child(6) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A16'].v);\n      cy.get(\":nth-child(8) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A24'].v);\n      cy.get(\":nth-child(8) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A25'].v);\n      cy.get('[type=\"radio\"]#aprn-req-supervision-yes').check(\"yes\", {\n        force: true\n      });\n      cy.get('[for=\"aprn-supervision-name\"]').invoke('text').as('text1').should('contain', sheet['A17'].v);\n      cy.get('[for=\"aprn-supervision-phone\"]').contains(\"Supervisory/Collaborating Physician Phone Number\");\n      cy.get('[for=\"aprn-supervision-dea\"]').contains(\"Supervisory/Collaborating Physician DEA Number\");\n    });\n  } /////////////////////////////////\n  //      PA & CN 30E USER             //\n  /////////////////////////////////\n  else if (this.text.Type === 'NPPA-30E' || this.text.Type === 'CN-30E') {\n    cy.task('readXlsx', {\n      file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Certification Questions.xlsx`,\n      sheet: `APRN,PA-30E`\n    }).then(sheet => {\n      cy.get(\".red-underline\").contains(\"Certifications\");\n      cy.get(\":nth-child(2) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n      cy.get(\":nth-child(2) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A3'].v);\n      cy.get(\":nth-child(3) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A4'].v);\n      cy.get(\":nth-child(3) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A5'].v);\n      cy.get(\":nth-child(4) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A6'].v);\n      cy.get(\":nth-child(4) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A7'].v);\n      cy.get(\":nth-child(5) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A8'].v);\n      if (this.text.Type === 'NPPA-30E') {\n        cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A9'].v);\n      }\n      if (this.text.Type === 'CN-30E') {\n        cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A10'].v);\n      }\n      cy.get(\":nth-child(6) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A11'].v);\n      cy.get(\":nth-child(6) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A12'].v);\n      cy.get(\".margin-top-0\").invoke('text').as('text1').should('contain', sheet['A13'].v);\n      cy.get(\":nth-child(6) > .usa-alert > .usa-alert__body > .usa-alert__text\").invoke('text').as('text1').should('contain', sheet['A14'].v);\n      cy.get(\":nth-child(5) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A15'].v);\n      cy.get(\":nth-child(6) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A16'].v);\n      cy.get(\":nth-child(8) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A24'].v);\n      cy.get(\":nth-child(8) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A25'].v);\n      cy.get('[type=\"radio\"]#aprn-req-supervision-yes').check(\"yes\", {\n        force: true\n      });\n      cy.get('[for=\"aprn-supervision-name\"]').invoke('text').as('text1').should('contain', sheet['A17'].v);\n      cy.get('[for=\"aprn-supervision-phone\"]').contains(\"Supervisory/Collaborating Physician Phone Number\");\n      cy.get('[for=\"aprn-supervision-dea\"]').contains(\"Supervisory/Collaborating Physician DEA Number\");\n    });\n  } /////////////////////////////////\n  //      PA & CN 100 USER             //\n  /////////////////////////////////\n  else if (this.text.Type === 'NPPA-100' || this.text.Type === 'CN-100') {\n    cy.task('readXlsx', {\n      file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Certification Questions.xlsx`,\n      sheet: `APRN,PA-100`\n    }).then(sheet => {\n      cy.get(\".red-underline\").contains(\"Certifications\");\n      cy.get(\":nth-child(2) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n      cy.get(\":nth-child(2) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A3'].v);\n      cy.get(\":nth-child(3) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A4'].v);\n      cy.get(\":nth-child(3) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A5'].v);\n      cy.get(\":nth-child(4) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A6'].v);\n      cy.get(\":nth-child(4) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A7'].v);\n      cy.get(\":nth-child(5) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A8'].v);\n      if (this.text.Type === 'NPPA-100') {\n        cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A9'].v);\n      }\n      if (this.text.Type === 'CN-100') {\n        cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A10'].v);\n      }\n      cy.get(\":nth-child(6) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A11'].v);\n      cy.get(\":nth-child(6) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A12'].v);\n      cy.get(\".margin-top-0\").invoke('text').as('text1').should('contain', sheet['A13'].v);\n      cy.get(\":nth-child(6) > .usa-alert > .usa-alert__body > .usa-alert__text\").invoke('text').as('text1').should('contain', sheet['A14'].v);\n      cy.get(\":nth-child(5) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A15'].v);\n      cy.get(\":nth-child(6) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A16'].v);\n      cy.get(\":nth-child(8) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A24'].v);\n      cy.get(\":nth-child(8) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A25'].v);\n      cy.get('[type=\"radio\"]#aprn-req-supervision-yes').check(\"yes\", {\n        force: true\n      });\n      cy.get('[for=\"aprn-supervision-name\"]').invoke('text').as('text1').should('contain', sheet['A17'].v);\n      cy.get('[for=\"aprn-supervision-phone\"]').contains(\"Supervisory/Collaborating Physician Phone Number\");\n      cy.get('[for=\"aprn-supervision-dea\"]').contains(\"Supervisory/Collaborating Physician DEA Number\");\n    });\n  } /////////////////////////////////\n  //      MD 30 USER             //\n  /////////////////////////////////\n  else if (this.text.Type === 'MD-30') {\n    cy.task('readXlsx', {\n      file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Certification Questions.xlsx`,\n      sheet: `MD-30`\n    }).then(sheet => {\n      cy.get(\".red-underline\").contains(\"Certifications\");\n      cy.get(\":nth-child(2) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n      cy.get(\":nth-child(2) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A3'].v);\n      cy.get(\":nth-child(3) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A4'].v);\n      cy.get(\":nth-child(3) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A5'].v);\n      cy.get(\":nth-child(4) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A6'].v);\n      cy.get(\":nth-child(4) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A7'].v);\n      });\n      cy.get(\":nth-child(5) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A8'].v);\n      cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A9'].v);\n    });\n  } /////////////////////////////////\n  //      MD 30E USER             //\n  /////////////////////////////////\n  else if (this.text.Type === 'MD-30E') {\n    cy.task('readXlsx', {\n      file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Certification Questions - SS.xlsx`,\n      sheet: `MD 30E`\n    }).then(sheet => {\n      cy.get(\".red-underline\").contains(\"Certifications\");\n      cy.get(\":nth-child(2) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n      cy.get(\":nth-child(2) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A3'].v);\n      cy.get(\":nth-child(3) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A4'].v);\n      cy.get(\":nth-child(3) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A5'].v);\n      cy.get(\":nth-child(4) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A6'].v);\n      cy.get(\":nth-child(4) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A7'].v);\n      cy.get(\":nth-child(5) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A8'].v);\n      cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A9'].v);\n      cy.get(\":nth-child(6) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A10'].v);\n      cy.get(\":nth-child(6) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A11'].v);\n      cy.get(\":nth-child(6) > .usa-legend > .margin-top-0\").invoke('text').as('text1').should('contain', sheet['A12'].v);\n      cy.get(\":nth-child(5) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A13'].v);\n      cy.get(\":nth-child(6) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A14'].v);\n      cy.get(\":nth-child(8) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A21'].v);\n      cy.get(\":nth-child(8) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A22'].v);\n      cy.get('[type=\"radio\"]#aprn-req-supervision-yes').check(\"yes\", {\n        force: true\n      });\n      cy.get('[for=\"aprn-supervision-name\"]').invoke('text').as('text1').should('contain', sheet['A15'].v);\n      cy.get('[for=\"aprn-supervision-phone\"]').contains(\"Supervisory/Collaborating Physician Phone Number\");\n      cy.get('[for=\"aprn-supervision-dea\"]').contains(\"Supervisory/Collaborating Physician DEA Number\");\n    });\n  } /////////////////////////////////\n  //      MD 100 USER             //\n  /////////////////////////////////\n  else if (this.text.Type === 'MD-100') {\n    cy.task('readXlsx', {\n      file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Certification Questions - SS.xlsx`,\n      sheet: `MD 100`\n    }).then(sheet => {\n      cy.get(\".red-underline\").contains(\"Certifications\");\n      cy.get(\":nth-child(2) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n      cy.get(\":nth-child(2) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A3'].v);\n      cy.get(\":nth-child(3) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A4'].v);\n      cy.get(\":nth-child(3) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A5'].v);\n      cy.get(\":nth-child(4) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A6'].v);\n      cy.get(\":nth-child(4) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A7'].v);\n      cy.get(\":nth-child(5) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A8'].v);\n      cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A9'].v);\n      cy.get(\":nth-child(6) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A10'].v);\n      cy.get(\":nth-child(6) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A11'].v);\n      cy.get(\":nth-child(6) > .usa-legend > .margin-top-0\").invoke('text').as('text1').should('contain', sheet['A12'].v);\n      cy.get(\":nth-child(5) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A13'].v);\n      cy.get(\":nth-child(6) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A14'].v);\n      cy.get(\":nth-child(8) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A21'].v);\n      cy.get(\":nth-child(8) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A22'].v);\n      cy.get('[type=\"radio\"]#aprn-req-supervision-yes').check(\"yes\", {\n        force: true\n      });\n      cy.get('[for=\"aprn-supervision-name\"]').invoke('text').as('text1').should('contain', sheet['A15'].v);\n      cy.get('[for=\"aprn-supervision-phone\"]').contains(\"Supervisory/Collaborating Physician Phone Number\");\n      cy.get('[for=\"aprn-supervision-dea\"]').contains(\"Supervisory/Collaborating Physician DEA Number\");\n    });\n  } /////////////////////////////////\n  //      MD 275 & 275E USER     //\n  /////////////////////////////////\n  else if (this.text.Type === 'MD-275' || this.text.Type === 'MD-275E') {\n    cy.task('readXlsx', {\n      file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Certification Questions - SS.xlsx`,\n      sheet: `MD 275,275E`\n    }).then(sheet => {\n      cy.get(\".red-underline\").contains(\"Certifications\");\n      cy.get(\":nth-child(2) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n      cy.get(\":nth-child(2) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A3'].v);\n      cy.get(\":nth-child(3) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A4'].v);\n      cy.get(\":nth-child(3) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A5'].v);\n      cy.get(\":nth-child(4) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A6'].v);\n      cy.get(\":nth-child(4) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A7'].v);\n      cy.get(\":nth-child(5) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A8'].v);\n      cy.get(\":nth-child(5) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A9'].v);\n      cy.get(\":nth-child(6) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A10'].v);\n      cy.get(\":nth-child(6) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A11'].v);\n      cy.get(\":nth-child(6) > .usa-legend > .margin-top-0\").invoke('text').as('text1').should('contain', sheet['A12'].v);\n      cy.get(\":nth-child(5) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A13'].v);\n      cy.get(\":nth-child(6) > .usa-radio__label\").invoke('text').as('text1').should('contain', sheet['A14'].v);\n      cy.get(\":nth-child(8) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A21'].v);\n      cy.get(\":nth-child(8) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A22'].v);\n      cy.get('[type=\"radio\"]#aprn-req-supervision-yes').check(\"yes\", {\n        force: true\n      });\n      cy.get('[for=\"aprn-supervision-name\"]').invoke('text').as('text1').should('contain', sheet['A15'].v);\n      cy.get('[for=\"aprn-supervision-phone\"]').contains(\"Supervisory/Collaborating Physician Phone Number\");\n      cy.get('[for=\"aprn-supervision-dea\"]').contains(\"Supervisory/Collaborating Physician DEA Number\");\n    });\n  } else {\n    cy.skipOn('Chrome');\n  }\n});",
              "err": {},
              "uuid": "fe0d9542-e644-4856-9326-1d92d726760d",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valdiation on the Certifications page ",
              "fullTitle": "Test file for F__NPPA-30 Valdiation on the Certifications page ",
              "timedOut": null,
              "duration": 4824,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n  this.text = text; /////////////////////////////////\n  //      PA 30 USER             //\n  /////////////////////////////////\n  if (this.text.Type === 'NPPA-30' || this.text.Type === 'CN-30') {\n    cy.get('[type=\"checkbox\"]#cert_narcotic').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#cert_capacity_counsel').then($input => {\n      expect($input[0].highlighted);\n    });\n    cy.get('[type=\"checkbox\"]#cert_capacity_counsel').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#cert_fda_approved').then($input => {\n      expect($input[0].highlighted);\n    });\n    if (this.text.Type === 'NPPA-30') {\n      cy.get('[type=\"checkbox\"]#cert_fda_approved').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#new_aprn').then($input => {\n        expect($input[0].highlighted);\n      });\n      cy.get('[type=\"checkbox\"]#new_aprn').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#cert_licensed').then($input => {\n        expect($input[0].highlighted);\n      });\n    }\n    if (this.text.Type === 'CN-30') {\n      cy.get('[type=\"checkbox\"]#cert_fda_approved').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#cert_nurse_specialty').then($input => {\n        expect($input[0].highlighted);\n      });\n      cy.get('[type=\"checkbox\"]#cert_nurse_specialty').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#cert_licensed').then($input => {\n        expect($input[0].highlighted);\n      });\n    }\n    cy.get('[type=\"checkbox\"]#cert_licensed').check(\"yes\", {\n      force: true\n    });\n    cy.get('[type=\"radio\"]#aprn-req-supervision-yes').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-name').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#aprn-supervision-name').type('Testing');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-phone').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#aprn-supervision-phone').type('xxxxxxxxxxx');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-phone').then($input => {\n      expect($input[0].validationMessage).to.eq('Please match the requested format.');\n    });\n    cy.get('#aprn-supervision-phone').clear().type('5555555555');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-dea').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#aprn-supervision-dea').clear().type('1234567');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-dea').then($input => {\n      expect($input[0].validationMessage).to.eq('Please match the requested format.');\n    });\n    cy.get('#aprn-supervision-dea').clear().type('x1234567');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-dea').then($input => {\n      expect($input[0].validationMessage).to.eq('Please match the requested format.');\n    });\n    cy.get('#aprn-supervision-dea').clear().type('xx1234567');\n    cy.get('.btn-next').click();\n    cy.get('.red-underline').contains(\"Certification of Qualifying Criteria\");\n  } else if (this.text.Type === 'NPPA-30E' || this.text.Type === 'CN-30E') {\n    cy.get('[type=\"checkbox\"]#cert_narcotic').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#cert_capacity_counsel').then($input => {\n      expect($input[0].highlighted);\n    });\n    cy.get('[type=\"checkbox\"]#cert_capacity_counsel').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#cert_fda_approved').then($input => {\n      expect($input[0].highlighted);\n    });\n    if (this.text.Type === 'NPPA-30E') {\n      cy.get('[type=\"checkbox\"]#cert_fda_approved').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#new_aprn').then($input => {\n        expect($input[0].highlighted);\n      });\n      cy.get('[type=\"checkbox\"]#new_aprn').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#cert_licensed').then($input => {\n        expect($input[0].highlighted);\n      });\n    }\n    if (this.text.Type === 'CN-30E') {\n      cy.get('[type=\"checkbox\"]#cert_fda_approved').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#cert_nurse_specialty').then($input => {\n        expect($input[0].highlighted);\n      });\n      cy.get('[type=\"checkbox\"]#cert_nurse_specialty').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#cert_licensed').then($input => {\n        expect($input[0].highlighted);\n      });\n    }\n    cy.get('[type=\"checkbox\"]#cert_licensed').check(\"yes\", {\n      force: true\n    });\n    cy.get('[type=\"radio\"]#aprn-req-supervision-yes').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-name').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#aprn-supervision-name').type('Testing');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-phone').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#aprn-supervision-phone').type('xxxxxxxxxxx');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-phone').then($input => {\n      expect($input[0].validationMessage).to.eq('Please match the requested format.');\n    });\n    cy.get('#aprn-supervision-phone').clear().type('5555555555');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-dea').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#aprn-supervision-dea').clear().type('1234567');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-dea').then($input => {\n      expect($input[0].validationMessage).to.eq('Please match the requested format.');\n    });\n    cy.get('#aprn-supervision-dea').clear().type('x1234567');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-dea').then($input => {\n      expect($input[0].validationMessage).to.eq('Please match the requested format.');\n    });\n    cy.get('#aprn-supervision-dea').clear().type('xx1234567');\n    cy.get('.btn-next').click();\n    cy.get('.red-underline').contains(\"Certification of Qualifying Criteria\");\n  } else if (this.text.Type === 'NPPA-100' || this.text.Type === 'CN-100') {\n    cy.get('[type=\"checkbox\"]#cert_narcotic').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#cert_capacity_counsel').then($input => {\n      expect($input[0].highlighted);\n    });\n    cy.get('[type=\"checkbox\"]#cert_capacity_counsel').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#cert_fda_approved').then($input => {\n      expect($input[0].highlighted);\n    });\n    if (this.text.Type === 'NPPA-100') {\n      cy.get('[type=\"checkbox\"]#cert_fda_approved').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#new_aprn').then($input => {\n        expect($input[0].highlighted);\n      });\n      cy.get('[type=\"checkbox\"]#new_aprn').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#cert_licensed').then($input => {\n        expect($input[0].highlighted);\n      });\n    }\n    if (this.text.Type === 'CN-100') {\n      cy.get('[type=\"checkbox\"]#cert_fda_approved').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#cert_nurse_specialty').then($input => {\n        expect($input[0].highlighted);\n      });\n      cy.get('[type=\"checkbox\"]#cert_nurse_specialty').check(\"yes\", {\n        force: true\n      });\n      cy.get('.btn-next').click();\n      cy.get('#cert_licensed').then($input => {\n        expect($input[0].highlighted);\n      });\n    }\n    cy.get('[type=\"checkbox\"]#cert_licensed').check(\"yes\", {\n      force: true\n    });\n    cy.get('[type=\"radio\"]#aprn-req-supervision-yes').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-name').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#aprn-supervision-name').type('Testing');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-phone').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#aprn-supervision-phone').type('xxxxxxxxxxx');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-phone').then($input => {\n      expect($input[0].validationMessage).to.eq('Please match the requested format.');\n    });\n    cy.get('#aprn-supervision-phone').clear().type('5555555555');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-dea').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#aprn-supervision-dea').clear().type('1234567');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-dea').then($input => {\n      expect($input[0].validationMessage).to.eq('Please match the requested format.');\n    });\n    cy.get('#aprn-supervision-dea').clear().type('x1234567');\n    cy.get('.btn-next').click();\n    cy.get('#aprn-supervision-dea').then($input => {\n      expect($input[0].validationMessage).to.eq('Please match the requested format.');\n    });\n    cy.get('#aprn-supervision-dea').clear().type('xx1234567');\n    cy.get('.btn-next').click();\n    cy.get('.red-underline').contains(\"Certification of Qualifying Criteria\");\n  } else if (this.text.Type === 'MD-30') {\n    cy.get('[type=\"checkbox\"]#cert_narcotic').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#cert_capacity_counsel').then($input => {\n      expect($input[0].highlighted);\n    });\n    cy.get('[type=\"checkbox\"]#cert_capacity_counsel').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('#cert_fda_approved').then($input => {\n      expect($input[0].highlighted);\n    });\n    cy.get('[type=\"checkbox\"]#cert_fda_approved').check(\"yes\", {\n      force: true\n    });\n    cy.get('.btn-next').click();\n    cy.get('.red-underline').contains(\"Certification of Qualifying Criteria\");\n  }\n});",
              "err": {},
              "uuid": "c7eca6ab-02ed-4510-bccd-a3da167f44ee",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Training page - Can check all values AND Validations ",
              "fullTitle": "Test file for F__NPPA-30 Training page - Can check all values AND Validations ",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n  this.text = text; /////////////////////////////////\n  //      PA & CN  USER     //\n  /////////////////////////////////\n  if (this.text.Type === 'NPPA-30' || this.text.Type === 'CN-30' || this.text.Type === 'NPPA-30E' || this.text.Type === 'CN-30E' || this.text.Type === 'NPPA-100' || this.text.Type === 'CN-100') {\n    cy.task('readXlsx', {\n      file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Training Questions.xlsx`,\n      sheet: `APRN,PA-30,100`\n    }).then(sheet => {\n      cy.get(\":nth-child(3) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n      cy.get(\":nth-child(3) > .usa-checkbox > .usa-checkbox__label\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A3'].v);\n      });\n      cy.get(\":nth-child(4) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A4'].v);\n      cy.get(\":nth-child(4) > :nth-child(2) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A5'].v);\n      cy.get(\":nth-child(3) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A6'].v);\n      cy.get(\":nth-child(4) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A7'].v);\n      cy.get(\":nth-child(5) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A8'].v);\n      cy.get(\":nth-child(6) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A9'].v);\n      cy.get(\":nth-child(7) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A10'].v);\n      cy.get(\":nth-child(8) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A11'].v);\n      cy.get(\":nth-child(9) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A12'].v);\n      cy.get(\":nth-child(10) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A13'].v);\n      cy.get(\":nth-child(11) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A14'].v);\n      cy.get(\":nth-child(12) > .usa-label\").invoke('text').as('text1').should('contain', sheet['A15'].v);\n      cy.get(\".margin-bottom-3 > :nth-child(1) > strong\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A16'].v);\n      });\n    });\n  } /////////////////////////////////\n  //      MD 30, 30E, 100 USER   //\n  /////////////////////////////////\n  else if (this.text.Type === 'MD-30' || this.text.Type === 'MD-30E' || this.text.Type === 'MD-100') {\n    cy.task('readXlsx', {\n      file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Training Questions.xlsx`,\n      sheet: `MD-30,100`\n    }).then(sheet => {\n      cy.get(\".margin-bottom-2 > .usa-legend > :nth-child(1) > strong\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n      cy.get(\":nth-child(2) > strong\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A3'].v);\n      });\n      cy.get(\".margin-bottom-2 > :nth-child(2) > .usa-checkbox__label\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A4'].v);\n      });\n      cy.get(\".margin-bottom-2 > :nth-child(3) > .usa-checkbox__label\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A5'].v);\n      });\n      cy.get(\".margin-bottom-2 > :nth-child(4) > .usa-checkbox__label\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A6'].v);\n      });\n      cy.get(\".margin-bottom-2 > :nth-child(5) > .usa-checkbox__label\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A7'].v);\n      });\n      cy.get(\".margin-bottom-2 > :nth-child(6) > .usa-checkbox__label\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A8'].v);\n      });\n      cy.get(\".margin-bottom-2 > :nth-child(7) > .usa-checkbox__label\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A9'].v);\n      });\n      cy.get(\":nth-child(4) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A10'].v);\n      });\n      cy.get(\":nth-child(4) > :nth-child(2) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A11'].v);\n      cy.get(\":nth-child(4) > :nth-child(3) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A12'].v);\n      cy.get(\":nth-child(4) > :nth-child(4) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A13'].v);\n      cy.get(\":nth-child(4) > :nth-child(5) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A14'].v);\n      cy.get(\":nth-child(4) > :nth-child(6) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A15'].v);\n      cy.get(\":nth-child(4) > :nth-child(7) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A16'].v);\n      cy.get(\":nth-child(8) > .usa-checkbox__label\").invoke('text').as('text1').should('contain', sheet['A17'].v);\n      cy.get(\":nth-child(5) > .usa-legend > .margin-bottom-05 > strong\").invoke('text').as('text1').should('contain', sheet['A18'].v);\n      cy.get(\"#appointment-date-label\").invoke('text').as('text1').should('contain', sheet['A19'].v);\n      cy.get('[for=\"input-type-text\"]').invoke('text').as('text1').should('contain', sheet['A21'].v);\n      cy.get('[for=\"training-state\"]').invoke('text').as('text1').should('contain', sheet['A22'].v);\n      cy.get(\":nth-child(6) > :nth-child(1) > strong\").invoke('text').as('text1').then(text => {\n        let format = text;\n        let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n        let formatters = formatter.replace(/\\s+/g, \" \");\n        expect(formatters).contains(sheet['A23'].v);\n      });\n      cy.get(\":nth-child(6) > .usa-form-group > .usa-label\").invoke('text').as('text1').should('contain', sheet['A24'].v);\n    });\n  } else {\n    cy.skipOn('Chrome');\n  }\n});",
              "err": {},
              "uuid": "3681ed27-b3c9-46d5-bacc-d866bd707669",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Training page - Can check the validations for each checkbox",
              "fullTitle": "Test file for F__NPPA-30 Training page - Can check the validations for each checkbox",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n  this.text = text; /////////////////////////////////\n  //      PA 30 USER             //\n  /////////////////////////////////\n  if (this.text.Type === 'NPPA-30' || this.text.Type === 'CN-30' || this.text.Type === 'NPPA-30E' || this.text.Type === 'CN-30E' || this.text.Type === 'NPPA-100' || this.text.Type === 'CN-100') {\n    cy.get('.btn-next').click();\n    cy.get('#training-aprn-certify').then($input => {\n      expect($input[0].highlighted);\n    });\n    cy.get('[type=\"checkbox\"]#training-aprn-certify').check(\"yes\", {\n      force: true\n    });\n  } else if (this.text.Type === 'MD-30' || this.text.Type === 'MD-30E' || this.text.Type === 'MD-100') {\n    cy.get('.btn-next').click();\n    cy.get('#appointment-date').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#appointment-date').clear().type(\"2021-01-20\");\n    cy.get('.btn-next').click();\n    cy.get('#input-type-text').then($input => {\n      expect($input[0].validationMessage).to.eq('Please fill out this field.');\n    });\n    cy.get('#input-type-text').clear().type(\"Fairfax\");\n    cy.get('.btn-next').click();\n    cy.get('#training-state').then($input => {\n      expect($input[0].validationMessage).to.eq('Please select an item in the list.');\n    });\n  } else {\n    cy.skipOn('Chrome');\n  }\n});",
              "err": {},
              "uuid": "8fa68552-b6bf-4ac0-bd33-948ab7265dbb",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Training page - Can upload a file and move to next page",
              "fullTitle": "Test file for F__NPPA-30 Training page - Can upload a file and move to next page",
              "timedOut": null,
              "duration": 1610,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n  this.text = text; /////////////////////////////////\n  //      PA & CN USER             //\n  /////////////////////////////////\n  if (this.text.Type === 'NPPA-30' || this.text.Type === 'CN-30' || this.text.Type === 'NPPA-30E' || this.text.Type === 'CN-30E' || this.text.Type === 'NPPA-100' || this.text.Type === 'CN-100') {\n    cy.get('[type=\"checkbox\"]#training-aprn-1').check(\"EightHoursTrainingASAM\", {\n      force: true\n    });\n    cy.get('#aprn-cert-date-0').clear().type(\"2021-01-20\");\n    const text2 = \"This is an upload testing file\";\n    cy.writeFile('/Users/37936/Documents/cypress/cypress/fixtures/testingfile/upload.doc', text2);\n    const uploadfile = '/testingfile/upload.doc';\n    cy.get(\"#file-input-single\").attachFile(uploadfile);\n    cy.get('.btn-next').click();\n    cy.get('.red-underline').contains(\"Publish My Information in the Treatment Locator\");\n  } /////////////////////////////////\n  //     MD USER                //\n  /////////////////////////////////\n  else if (this.text.Type === 'MD-30' || this.text.Type === 'MD-30E' || this.text.Type === 'MD-100') {\n    cy.get('[type=\"checkbox\"]#training30-1').check(\"ABMSCertification\", {\n      force: true\n    });\n    cy.get('[type=\"checkbox\"]#training30-2').check(\"ASAMCertification\", {\n      force: true\n    });\n    cy.get('[type=\"checkbox\"]#training30-3').check(\"ParticipationInClinicalTrials\", {\n      force: true\n    });\n    cy.get('[type=\"checkbox\"]#training30-4').check(\"StateApproved\", {\n      force: true\n    });\n    cy.get('[type=\"checkbox\"]#training30-5').check(\"graduatedAccredited\", {\n      force: true\n    });\n    cy.get('[type=\"checkbox\"]#training30-6').check(\"AOACertification\", {\n      force: true\n    });\n    cy.get('[type=\"checkbox\"]#american1').check(\"EightHoursTrainingASAM\", {\n      force: true\n    });\n    cy.get('#appointment-date').clear().type(\"2021-01-20\");\n    cy.get('#input-type-text').clear().type(\"Fairfax\");\n    cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/state/state.txt`).then(text => {\n      const Licensestate = text;\n      cy.get('#training-state').select(Licensestate, {\n        force: true\n      }).should('have.value', Licensestate);\n    });\n    const text2 = \"This is an upload testing file\";\n    cy.writeFile('/Users/37936/Documents/cypress/cypress/fixtures/testingfile/upload.doc', text2);\n    const uploadfile = '/testingfile/upload.doc';\n    cy.get(\"#file-input-single\").attachFile(uploadfile);\n    cy.get('.btn-next').click();\n    cy.get('.red-underline').contains(\"Publish My Information in the Treatment Locator\");\n  }\n});",
              "err": {},
              "uuid": "696fada5-0156-4b66-beff-0dccc86c340b",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Locator Opt-in page Check all contents",
              "fullTitle": "Test file for F__NPPA-30 Locator Opt-in page Check all contents",
              "timedOut": null,
              "duration": 1413,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('readXlsx', {\n  file: `/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/requirement/BWNS NOI Locator Opt-in Questions.xlsx`,\n  sheet: `APRN,PA,MD-`\n}).then(sheet => {\n  cy.get(\".red-underline\").contains(\"Publish My Information in the Treatment Locator\");\n  cy.get(\".padding-top-2\").invoke('text').as('text1').should('contain', sheet['A2'].v);\n  cy.get(\":nth-child(1) > .usa-radio__label\").invoke('text').as('text1').then(text => {\n    let format = text;\n    let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n    let formatters = formatter.replace(/\\s+/g, \" \");\n    expect(formatters).contains(sheet['A3'].v);\n  });\n  cy.get(\":nth-child(2) > .usa-radio__label\").invoke('text').as('text1').then(text => {\n    let format = text;\n    let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n    let formatters = formatter.replace(/\\s+/g, \" \");\n    expect(formatters).contains(sheet['A4'].v);\n  });\n  cy.get(\".margin-bottom-05 > strong\").invoke('text').as('text1').then(text => {\n    let format = text;\n    let formatter = format.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n    let formatters = formatter.replace(/\\s+/g, \" \");\n    expect(formatters).contains(sheet['A5'].v);\n  });\n  cy.get(':nth-child(2) > .usa-checkbox__label').invoke('text').as('text1').should('contain', sheet['A6'].v);\n  cy.get(':nth-child(3) > .usa-checkbox__label').invoke('text').as('text1').should('contain', sheet['A7'].v);\n  cy.get(':nth-child(4) > .usa-checkbox__label').invoke('text').as('text1').should('contain', sheet['A8'].v);\n});\ncy.get('.btn-next').click();\ncy.get('#consent').then($input => {\n  expect($input[0].highlighted);\n});\ncy.get('[type=\"radio\"]#consent').check(\"yes\", {\n  force: true\n});\ncy.get('[type=\"checkbox\"]#longacting1').check(\"locatorInjectableNaltrexone\", {\n  force: true\n});\ncy.get('.btn-next').click();\ncy.get(\".red-underline\").contains(\"Electronic Signature\");",
              "err": {},
              "uuid": "b5169153-ddb1-47fd-ac04-c828be670d44",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Electronic Signature - Can check all contents on the Electronic Signature page",
              "fullTitle": "Test file for F__NPPA-30 Electronic Signature - Can check all contents on the Electronic Signature page",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".red-underline\").contains(\"Electronic Signature\");\ncy.get(\".margin-bottom-05 > strong\").contains(\"Certification of Use of Narcotic Drugs Under This Notification\");\ncy.get(\".usa-checkbox__label\").contains(\"I certify that the information presented above is true and correct to the best of my knowledge. I certify that I will notify SAMHSA at the address below if any of the information contained on this form changes.\");\ncy.get(\".usa-accordion__heading > .usa-accordion__button\").contains(\"Expand to review Privacy Act and Paperwork Reduction Act\");\ncy.get('[for=\"signature\"]').contains(\"Please type your name to sign the electronic form.\");\ncy.get('#appointment-date-label').contains(\"Submission Date\");\ncy.get('[for=\"deanumber\"]').contains(\"Please re-enter your DEA Registration Number to verify:\");",
              "err": {},
              "uuid": "6103a96e-21c0-4b95-8465-e102dbab630c",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validation - Electronic Signature - Can check the checkbox",
              "fullTitle": "Test file for F__NPPA-30 Validation - Electronic Signature - Can check the checkbox",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.btn-next').click();\ncy.get('#sigcertify').then($input => {\n  expect($input[0].highlighted);\n});",
              "err": {},
              "uuid": "48d91d32-539d-4825-9a2d-fa00874a2738",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validation - Electronic Signature - Can check the sign the electronic form",
              "fullTitle": "Test file for F__NPPA-30 Validation - Electronic Signature - Can check the sign the electronic form",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[type=\"checkbox\"]#sigcertify').check(\"yes\", {\n  force: true\n});\ncy.get('.btn-next').click();\ncy.get('#signature').then($input => {\n  expect($input[0].validationMessage).to.eq('Please fill out this field.');\n});",
              "err": {},
              "uuid": "cf834c70-2e84-4231-9c41-3bec530a5ef2",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validation - Electronic Signature - Can check the deanumber",
              "fullTitle": "Test file for F__NPPA-30 Validation - Electronic Signature - Can check the deanumber",
              "timedOut": null,
              "duration": 348,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[type=\"checkbox\"]#sigcertify').check(\"yes\", {\n  force: true\n});\ncy.get('#signature').clear().type(\"testing\");\ncy.get('.btn-next').click();\ncy.get('#deanumber').then($input => {\n  expect($input[0].validationMessage).to.eq('Please fill out this field.');\n});",
              "err": {},
              "uuid": "f76cb282-ad73-4658-83d3-6ba218a57e06",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validation - Electronic Signature - Can check the deanumber",
              "fullTitle": "Test file for F__NPPA-30 Validation - Electronic Signature - Can check the deanumber",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const dayjs = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\ncy.get('[type=\"checkbox\"]#sigcertify').check(\"yes\", {\n  force: true\n});\ncy.get('#signature').clear().type(\"testing\");\ncy.get('#appointment-date').should('have.value', dayjs().format('YYYY-MM-DD'));\ncy.get('.btn-next').click();\ncy.get('#deanumber').then($input => {\n  expect($input[0].validationMessage).to.eq('Please fill out this field.');\n});",
              "err": {},
              "uuid": "70f3a352-cc6e-499d-8ac0-8323a7ba6b30",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Electronic Signature - Can fill up the form and move to next page",
              "fullTitle": "Test file for F__NPPA-30 Electronic Signature - Can fill up the form and move to next page",
              "timedOut": null,
              "duration": 2181,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const dayjs = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\ncy.get('[type=\"checkbox\"]#sigcertify').check(\"yes\", {\n  force: true\n});\ncy.get('#signature').clear().type(\"testing\");\ncy.get('#deanumber').clear();\ncy.readFile('/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/DEA/DEAnumber.txt').then(textDEA => {\n  const textToPaste = textDEA;\n  cy.get('#deanumber').invoke('val', textToPaste);\n});\ncy.get('.btn-next').click();\ncy.get('.red-underline').contains(\"Dashboard\");\ncy.get('.management-dashboard > #alert-warning > .usa-alert__body > .usa-alert__text').contains(\"You successfully submitted a waiver.\");",
              "err": {},
              "uuid": "23c80274-6cae-43a6-be40-2620de2829bc",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout user",
              "fullTitle": "Test file for F__NPPA-30 logout user",
              "timedOut": null,
              "duration": 784,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.sidebar-content > :nth-child(3) > a').click();\ncy.get('#logout-form > a').click();",
              "err": {},
              "uuid": "8195ff24-7c85-4dd6-b4d0-fead14644bfb",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "has user",
              "fullTitle": "Test file for F__NPPA-30 has user",
              "timedOut": null,
              "duration": 703,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n  this.text = text;\n  const textToCopy = this.text.username;\n  cy.log(textToCopy);\n  cy.request('https://test-samhsa-bwns.icfng-sites.com/practitioner-json?email=' + textToCopy).its('body').then(JSON => {\n    // cy.writeFile automatically creates the output folder\n    cy.writeFile(`/Users/37936/Documents/cypress/cypress/fixtures/userinformation/${Allusers}.json`, JSON);\n  });\n});\ncy.fixture(`userinformation/${Allusers}`).then(testcase => {\n  // \"this\" is still the test context object\n  this.testcase = testcase;\n  cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/${Allusers}.json`).then(text => {\n    this.text = text;\n    if (this.text.UserType === 'F_') {\n      expect(this.testcase.waivers).to.have.lengthOf(1);\n    } else {\n      expect(this.testcase.waivers).to.have.length.greaterThan(1);\n    }\n  });\n  if (this.text.Type === 'NPPA-30' || this.text.Type === 'NPPA-30E' || this.text.Type === 'NPPA-100') {\n    expect(this.testcase.Type).to.equal('PA');\n  }\n  if (this.text.Type === 'CN-30' || this.text.Type === 'CN-30E' || this.text.Type === 'CN-100') {\n    expect(this.testcase.Type).to.equal('APRN');\n  }\n  cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/userinfo/profile/${Allusers}.json`).then(text2 => {\n    this.text2 = text2;\n    expect(this.testcase.NameFirst).to.equal(this.text2.FirstName);\n    expect(this.testcase.NameLast).to.equal(this.text2.LastName);\n    expect(this.testcase.NameSuffix).to.equal(this.text2.Suffix);\n  });\n  cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/useraccount/userinfo/address/${Allusers}.json`).then(text3 => {\n    this.text3 = text3;\n    expect(this.testcase.addresses[0].Street1).to.equal(this.text3.Address);\n    expect(this.testcase.addresses[0].City).to.equal(this.text3.City);\n    expect(this.testcase.addresses[0].Zip).to.equal(this.text3.Zipcode);\n  });\n  cy.readFile(`/Users/37936/Documents/cypress/cypress/integration/BWNS_workflow/BWNS_usercases/state/state.txt`).then(text4 => {\n    expect(this.testcase.LicenseState).to.equal(text4);\n  });\n});",
              "err": {},
              "uuid": "554f7a39-50f0-457b-855c-744278fcbbfe",
              "parentUUID": "ebae34d2-f596-4357-84af-429b52391251",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bec28aa-b9de-4d6b-94c7-9b823c000389",
            "e53e9ad4-99e1-46ec-aed4-d21ae298de06",
            "c44de3bc-d07b-4ecc-a5e3-dce67605177d",
            "cb3f8586-49bd-4db3-baf6-60d39ef8e9c8",
            "c087a582-558b-4fae-8cdf-49fe9882df92",
            "1d35e827-a151-40d8-aac9-e969f2bab4da",
            "fe0d9542-e644-4856-9326-1d92d726760d",
            "c7eca6ab-02ed-4510-bccd-a3da167f44ee",
            "3681ed27-b3c9-46d5-bacc-d866bd707669",
            "8fa68552-b6bf-4ac0-bd33-948ab7265dbb",
            "696fada5-0156-4b66-beff-0dccc86c340b",
            "b5169153-ddb1-47fd-ac04-c828be670d44",
            "6103a96e-21c0-4b95-8465-e102dbab630c",
            "48d91d32-539d-4825-9a2d-fa00874a2738",
            "cf834c70-2e84-4231-9c41-3bec530a5ef2",
            "f76cb282-ad73-4658-83d3-6ba218a57e06",
            "70f3a352-cc6e-499d-8ac0-8323a7ba6b30",
            "23c80274-6cae-43a6-be40-2620de2829bc",
            "8195ff24-7c85-4dd6-b4d0-fead14644bfb",
            "554f7a39-50f0-457b-855c-744278fcbbfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30223,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]-[status]_[datetime]-report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "reportFilename": "[name]-[status]_[datetime]-report",
        "charts": true,
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "embeddedScreenshots": true
      },
      "version": "6.2.0"
    }
  }
}